// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  avatar    String
  chats     Chat[]
  messages  Message[]
  notifications Notification[] @relation("user")
  targetNotifications Notification[] @relation("target")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Chat {
  id        String   @id @default(cuid())
  name      String
  users     User[]
  messages  Message[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Message {
  id        String   @id @default(cuid())
  chatId    String
  chat      Chat     @relation(fields: [chatId], references: [id])
  userId    String   
  user      User     @relation(fields: [userId], references: [id])
  content   String
  received  Boolean  @default(false)
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Notification {
  id         String   @id @default(cuid())
  userEmail     String
  user       User     @relation("user", fields: [userEmail], references: [email])
  targetId   String
  targetUser User   @relation("target", fields: [targetId], references: [id])
  content    String
  targetAccepted Boolean @default(false)
  type       Type     @default(Request)
  read       Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

enum Type {
  Accept 
  Request
}
